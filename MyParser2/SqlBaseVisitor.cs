//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SqlBase.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SqlBaseParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface ISqlBaseVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.singleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleStatement([NotNull] SqlBaseParser.SingleStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.standaloneExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStandaloneExpression([NotNull] SqlBaseParser.StandaloneExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.standaloneRoutineBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStandaloneRoutineBody([NotNull] SqlBaseParser.StandaloneRoutineBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>statementDefault</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementDefault([NotNull] SqlBaseParser.StatementDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>use</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUse([NotNull] SqlBaseParser.UseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>createSchema</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateSchema([NotNull] SqlBaseParser.CreateSchemaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dropSchema</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropSchema([NotNull] SqlBaseParser.DropSchemaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>renameSchema</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRenameSchema([NotNull] SqlBaseParser.RenameSchemaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>createTableAsSelect</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateTableAsSelect([NotNull] SqlBaseParser.CreateTableAsSelectContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>createTable</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateTable([NotNull] SqlBaseParser.CreateTableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dropTable</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropTable([NotNull] SqlBaseParser.DropTableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>insertInto</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInsertInto([NotNull] SqlBaseParser.InsertIntoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>delete</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDelete([NotNull] SqlBaseParser.DeleteContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>renameTable</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRenameTable([NotNull] SqlBaseParser.RenameTableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>renameColumn</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRenameColumn([NotNull] SqlBaseParser.RenameColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dropColumn</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropColumn([NotNull] SqlBaseParser.DropColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>addColumn</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddColumn([NotNull] SqlBaseParser.AddColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>analyze</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnalyze([NotNull] SqlBaseParser.AnalyzeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>createView</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateView([NotNull] SqlBaseParser.CreateViewContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dropView</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropView([NotNull] SqlBaseParser.DropViewContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>createMaterializedView</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateMaterializedView([NotNull] SqlBaseParser.CreateMaterializedViewContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dropMaterializedView</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropMaterializedView([NotNull] SqlBaseParser.DropMaterializedViewContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>createFunction</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateFunction([NotNull] SqlBaseParser.CreateFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>alterFunction</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlterFunction([NotNull] SqlBaseParser.AlterFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dropFunction</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropFunction([NotNull] SqlBaseParser.DropFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>call</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall([NotNull] SqlBaseParser.CallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>createRole</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreateRole([NotNull] SqlBaseParser.CreateRoleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dropRole</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDropRole([NotNull] SqlBaseParser.DropRoleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>grantRoles</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGrantRoles([NotNull] SqlBaseParser.GrantRolesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>revokeRoles</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRevokeRoles([NotNull] SqlBaseParser.RevokeRolesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setRole</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetRole([NotNull] SqlBaseParser.SetRoleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>grant</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGrant([NotNull] SqlBaseParser.GrantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>revoke</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRevoke([NotNull] SqlBaseParser.RevokeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showGrants</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowGrants([NotNull] SqlBaseParser.ShowGrantsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>explain</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplain([NotNull] SqlBaseParser.ExplainContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showCreateTable</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowCreateTable([NotNull] SqlBaseParser.ShowCreateTableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showCreateView</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowCreateView([NotNull] SqlBaseParser.ShowCreateViewContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showCreateMaterializedView</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowCreateMaterializedView([NotNull] SqlBaseParser.ShowCreateMaterializedViewContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showCreateFunction</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowCreateFunction([NotNull] SqlBaseParser.ShowCreateFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showTables</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowTables([NotNull] SqlBaseParser.ShowTablesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showSchemas</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowSchemas([NotNull] SqlBaseParser.ShowSchemasContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showCatalogs</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowCatalogs([NotNull] SqlBaseParser.ShowCatalogsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showColumns</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowColumns([NotNull] SqlBaseParser.ShowColumnsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showStats</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowStats([NotNull] SqlBaseParser.ShowStatsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showStatsForQuery</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowStatsForQuery([NotNull] SqlBaseParser.ShowStatsForQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showRoles</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowRoles([NotNull] SqlBaseParser.ShowRolesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showRoleGrants</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowRoleGrants([NotNull] SqlBaseParser.ShowRoleGrantsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showFunctions</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowFunctions([NotNull] SqlBaseParser.ShowFunctionsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>showSession</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShowSession([NotNull] SqlBaseParser.ShowSessionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setSession</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetSession([NotNull] SqlBaseParser.SetSessionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>resetSession</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResetSession([NotNull] SqlBaseParser.ResetSessionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>startTransaction</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStartTransaction([NotNull] SqlBaseParser.StartTransactionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>commit</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommit([NotNull] SqlBaseParser.CommitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>rollback</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRollback([NotNull] SqlBaseParser.RollbackContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>prepare</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrepare([NotNull] SqlBaseParser.PrepareContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>deallocate</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeallocate([NotNull] SqlBaseParser.DeallocateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>execute</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExecute([NotNull] SqlBaseParser.ExecuteContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>describeInput</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDescribeInput([NotNull] SqlBaseParser.DescribeInputContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>describeOutput</c>
	/// labeled alternative in <see cref="SqlBaseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDescribeOutput([NotNull] SqlBaseParser.DescribeOutputContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery([NotNull] SqlBaseParser.QueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.with"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWith([NotNull] SqlBaseParser.WithContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.tableElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableElement([NotNull] SqlBaseParser.TableElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.columnDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColumnDefinition([NotNull] SqlBaseParser.ColumnDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.likeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLikeClause([NotNull] SqlBaseParser.LikeClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.properties"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProperties([NotNull] SqlBaseParser.PropertiesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProperty([NotNull] SqlBaseParser.PropertyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.sqlParameterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSqlParameterDeclaration([NotNull] SqlBaseParser.SqlParameterDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.routineCharacteristics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoutineCharacteristics([NotNull] SqlBaseParser.RoutineCharacteristicsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.routineCharacteristic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoutineCharacteristic([NotNull] SqlBaseParser.RoutineCharacteristicContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.alterRoutineCharacteristics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlterRoutineCharacteristics([NotNull] SqlBaseParser.AlterRoutineCharacteristicsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.alterRoutineCharacteristic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlterRoutineCharacteristic([NotNull] SqlBaseParser.AlterRoutineCharacteristicContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.routineBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoutineBody([NotNull] SqlBaseParser.RoutineBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] SqlBaseParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.externalBodyReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalBodyReference([NotNull] SqlBaseParser.ExternalBodyReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.language"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLanguage([NotNull] SqlBaseParser.LanguageContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.determinism"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeterminism([NotNull] SqlBaseParser.DeterminismContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.nullCallClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullCallClause([NotNull] SqlBaseParser.NullCallClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.externalRoutineName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalRoutineName([NotNull] SqlBaseParser.ExternalRoutineNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.queryNoWith"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryNoWith([NotNull] SqlBaseParser.QueryNoWithContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>queryTermDefault</c>
	/// labeled alternative in <see cref="SqlBaseParser.queryTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryTermDefault([NotNull] SqlBaseParser.QueryTermDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setOperation</c>
	/// labeled alternative in <see cref="SqlBaseParser.queryTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetOperation([NotNull] SqlBaseParser.SetOperationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>queryPrimaryDefault</c>
	/// labeled alternative in <see cref="SqlBaseParser.queryPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryPrimaryDefault([NotNull] SqlBaseParser.QueryPrimaryDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>table</c>
	/// labeled alternative in <see cref="SqlBaseParser.queryPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTable([NotNull] SqlBaseParser.TableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>inlineTable</c>
	/// labeled alternative in <see cref="SqlBaseParser.queryPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInlineTable([NotNull] SqlBaseParser.InlineTableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>subquery</c>
	/// labeled alternative in <see cref="SqlBaseParser.queryPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubquery([NotNull] SqlBaseParser.SubqueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.sortItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSortItem([NotNull] SqlBaseParser.SortItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.querySpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuerySpecification([NotNull] SqlBaseParser.QuerySpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.groupBy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupBy([NotNull] SqlBaseParser.GroupByContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>singleGroupingSet</c>
	/// labeled alternative in <see cref="SqlBaseParser.groupingElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleGroupingSet([NotNull] SqlBaseParser.SingleGroupingSetContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>rollup</c>
	/// labeled alternative in <see cref="SqlBaseParser.groupingElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRollup([NotNull] SqlBaseParser.RollupContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>cube</c>
	/// labeled alternative in <see cref="SqlBaseParser.groupingElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCube([NotNull] SqlBaseParser.CubeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multipleGroupingSets</c>
	/// labeled alternative in <see cref="SqlBaseParser.groupingElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultipleGroupingSets([NotNull] SqlBaseParser.MultipleGroupingSetsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.groupingSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupingSet([NotNull] SqlBaseParser.GroupingSetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.namedQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamedQuery([NotNull] SqlBaseParser.NamedQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.setQuantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetQuantifier([NotNull] SqlBaseParser.SetQuantifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>selectSingle</c>
	/// labeled alternative in <see cref="SqlBaseParser.selectItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectSingle([NotNull] SqlBaseParser.SelectSingleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>selectAll</c>
	/// labeled alternative in <see cref="SqlBaseParser.selectItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectAll([NotNull] SqlBaseParser.SelectAllContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>relationDefault</c>
	/// labeled alternative in <see cref="SqlBaseParser.relation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationDefault([NotNull] SqlBaseParser.RelationDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>joinRelation</c>
	/// labeled alternative in <see cref="SqlBaseParser.relation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJoinRelation([NotNull] SqlBaseParser.JoinRelationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.joinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJoinType([NotNull] SqlBaseParser.JoinTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.joinCriteria"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJoinCriteria([NotNull] SqlBaseParser.JoinCriteriaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.sampledRelation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSampledRelation([NotNull] SqlBaseParser.SampledRelationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.sampleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSampleType([NotNull] SqlBaseParser.SampleTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.aliasedRelation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAliasedRelation([NotNull] SqlBaseParser.AliasedRelationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.columnAliases"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColumnAliases([NotNull] SqlBaseParser.ColumnAliasesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tableName</c>
	/// labeled alternative in <see cref="SqlBaseParser.relationPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableName([NotNull] SqlBaseParser.TableNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>subqueryRelation</c>
	/// labeled alternative in <see cref="SqlBaseParser.relationPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubqueryRelation([NotNull] SqlBaseParser.SubqueryRelationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unnest</c>
	/// labeled alternative in <see cref="SqlBaseParser.relationPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnnest([NotNull] SqlBaseParser.UnnestContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lateral</c>
	/// labeled alternative in <see cref="SqlBaseParser.relationPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLateral([NotNull] SqlBaseParser.LateralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedRelation</c>
	/// labeled alternative in <see cref="SqlBaseParser.relationPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedRelation([NotNull] SqlBaseParser.ParenthesizedRelationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] SqlBaseParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logicalNot</c>
	/// labeled alternative in <see cref="SqlBaseParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalNot([NotNull] SqlBaseParser.LogicalNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>predicated</c>
	/// labeled alternative in <see cref="SqlBaseParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicated([NotNull] SqlBaseParser.PredicatedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logicalBinary</c>
	/// labeled alternative in <see cref="SqlBaseParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalBinary([NotNull] SqlBaseParser.LogicalBinaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>comparison</c>
	/// labeled alternative in <see cref="SqlBaseParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison([NotNull] SqlBaseParser.ComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quantifiedComparison</c>
	/// labeled alternative in <see cref="SqlBaseParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuantifiedComparison([NotNull] SqlBaseParser.QuantifiedComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>between</c>
	/// labeled alternative in <see cref="SqlBaseParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBetween([NotNull] SqlBaseParser.BetweenContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>inList</c>
	/// labeled alternative in <see cref="SqlBaseParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInList([NotNull] SqlBaseParser.InListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>inSubquery</c>
	/// labeled alternative in <see cref="SqlBaseParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInSubquery([NotNull] SqlBaseParser.InSubqueryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>like</c>
	/// labeled alternative in <see cref="SqlBaseParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLike([NotNull] SqlBaseParser.LikeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nullPredicate</c>
	/// labeled alternative in <see cref="SqlBaseParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullPredicate([NotNull] SqlBaseParser.NullPredicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>distinctFrom</c>
	/// labeled alternative in <see cref="SqlBaseParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDistinctFrom([NotNull] SqlBaseParser.DistinctFromContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueExpressionDefault</c>
	/// labeled alternative in <see cref="SqlBaseParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueExpressionDefault([NotNull] SqlBaseParser.ValueExpressionDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>concatenation</c>
	/// labeled alternative in <see cref="SqlBaseParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConcatenation([NotNull] SqlBaseParser.ConcatenationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arithmeticBinary</c>
	/// labeled alternative in <see cref="SqlBaseParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticBinary([NotNull] SqlBaseParser.ArithmeticBinaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arithmeticUnary</c>
	/// labeled alternative in <see cref="SqlBaseParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticUnary([NotNull] SqlBaseParser.ArithmeticUnaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>atTimeZone</c>
	/// labeled alternative in <see cref="SqlBaseParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtTimeZone([NotNull] SqlBaseParser.AtTimeZoneContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dereference</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDereference([NotNull] SqlBaseParser.DereferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeConstructor</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeConstructor([NotNull] SqlBaseParser.TypeConstructorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>specialDateTimeFunction</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpecialDateTimeFunction([NotNull] SqlBaseParser.SpecialDateTimeFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>substring</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubstring([NotNull] SqlBaseParser.SubstringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>cast</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCast([NotNull] SqlBaseParser.CastContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lambda</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambda([NotNull] SqlBaseParser.LambdaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] SqlBaseParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parameter</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] SqlBaseParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>normalize</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNormalize([NotNull] SqlBaseParser.NormalizeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intervalLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalLiteral([NotNull] SqlBaseParser.IntervalLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>numericLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericLiteral([NotNull] SqlBaseParser.NumericLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>booleanLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteral([NotNull] SqlBaseParser.BooleanLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simpleCase</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleCase([NotNull] SqlBaseParser.SimpleCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>columnReference</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColumnReference([NotNull] SqlBaseParser.ColumnReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nullLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullLiteral([NotNull] SqlBaseParser.NullLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>rowConstructor</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRowConstructor([NotNull] SqlBaseParser.RowConstructorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>subscript</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubscript([NotNull] SqlBaseParser.SubscriptContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>subqueryExpression</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubqueryExpression([NotNull] SqlBaseParser.SubqueryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>binaryLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryLiteral([NotNull] SqlBaseParser.BinaryLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>currentUser</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCurrentUser([NotNull] SqlBaseParser.CurrentUserContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>extract</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtract([NotNull] SqlBaseParser.ExtractContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLiteral([NotNull] SqlBaseParser.StringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arrayConstructor</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayConstructor([NotNull] SqlBaseParser.ArrayConstructorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionCall</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] SqlBaseParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exists</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExists([NotNull] SqlBaseParser.ExistsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>position</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPosition([NotNull] SqlBaseParser.PositionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>searchedCase</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSearchedCase([NotNull] SqlBaseParser.SearchedCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>groupingOperation</c>
	/// labeled alternative in <see cref="SqlBaseParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupingOperation([NotNull] SqlBaseParser.GroupingOperationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>basicStringLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBasicStringLiteral([NotNull] SqlBaseParser.BasicStringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unicodeStringLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnicodeStringLiteral([NotNull] SqlBaseParser.UnicodeStringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.nullTreatment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullTreatment([NotNull] SqlBaseParser.NullTreatmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timeZoneInterval</c>
	/// labeled alternative in <see cref="SqlBaseParser.timeZoneSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeZoneInterval([NotNull] SqlBaseParser.TimeZoneIntervalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timeZoneString</c>
	/// labeled alternative in <see cref="SqlBaseParser.timeZoneSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeZoneString([NotNull] SqlBaseParser.TimeZoneStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOperator([NotNull] SqlBaseParser.ComparisonOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.comparisonQuantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonQuantifier([NotNull] SqlBaseParser.ComparisonQuantifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.booleanValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanValue([NotNull] SqlBaseParser.BooleanValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.interval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterval([NotNull] SqlBaseParser.IntervalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.intervalField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalField([NotNull] SqlBaseParser.IntervalFieldContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.normalForm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNormalForm([NotNull] SqlBaseParser.NormalFormContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.types"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypes([NotNull] SqlBaseParser.TypesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] SqlBaseParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.typeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameter([NotNull] SqlBaseParser.TypeParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBaseType([NotNull] SqlBaseParser.BaseTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.whenClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhenClause([NotNull] SqlBaseParser.WhenClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFilter([NotNull] SqlBaseParser.FilterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.over"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOver([NotNull] SqlBaseParser.OverContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.windowFrame"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWindowFrame([NotNull] SqlBaseParser.WindowFrameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unboundedFrame</c>
	/// labeled alternative in <see cref="SqlBaseParser.frameBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnboundedFrame([NotNull] SqlBaseParser.UnboundedFrameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>currentRowBound</c>
	/// labeled alternative in <see cref="SqlBaseParser.frameBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCurrentRowBound([NotNull] SqlBaseParser.CurrentRowBoundContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boundedFrame</c>
	/// labeled alternative in <see cref="SqlBaseParser.frameBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoundedFrame([NotNull] SqlBaseParser.BoundedFrameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>explainFormat</c>
	/// labeled alternative in <see cref="SqlBaseParser.explainOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplainFormat([NotNull] SqlBaseParser.ExplainFormatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>explainType</c>
	/// labeled alternative in <see cref="SqlBaseParser.explainOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplainType([NotNull] SqlBaseParser.ExplainTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>isolationLevel</c>
	/// labeled alternative in <see cref="SqlBaseParser.transactionMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsolationLevel([NotNull] SqlBaseParser.IsolationLevelContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>transactionAccessMode</c>
	/// labeled alternative in <see cref="SqlBaseParser.transactionMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTransactionAccessMode([NotNull] SqlBaseParser.TransactionAccessModeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>readUncommitted</c>
	/// labeled alternative in <see cref="SqlBaseParser.levelOfIsolation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReadUncommitted([NotNull] SqlBaseParser.ReadUncommittedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>readCommitted</c>
	/// labeled alternative in <see cref="SqlBaseParser.levelOfIsolation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReadCommitted([NotNull] SqlBaseParser.ReadCommittedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>repeatableRead</c>
	/// labeled alternative in <see cref="SqlBaseParser.levelOfIsolation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatableRead([NotNull] SqlBaseParser.RepeatableReadContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>serializable</c>
	/// labeled alternative in <see cref="SqlBaseParser.levelOfIsolation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSerializable([NotNull] SqlBaseParser.SerializableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>positionalArgument</c>
	/// labeled alternative in <see cref="SqlBaseParser.callArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPositionalArgument([NotNull] SqlBaseParser.PositionalArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>namedArgument</c>
	/// labeled alternative in <see cref="SqlBaseParser.callArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamedArgument([NotNull] SqlBaseParser.NamedArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.privilege"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrivilege([NotNull] SqlBaseParser.PrivilegeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedName([NotNull] SqlBaseParser.QualifiedNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>currentUserGrantor</c>
	/// labeled alternative in <see cref="SqlBaseParser.grantor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCurrentUserGrantor([NotNull] SqlBaseParser.CurrentUserGrantorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>currentRoleGrantor</c>
	/// labeled alternative in <see cref="SqlBaseParser.grantor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCurrentRoleGrantor([NotNull] SqlBaseParser.CurrentRoleGrantorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>specifiedPrincipal</c>
	/// labeled alternative in <see cref="SqlBaseParser.grantor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpecifiedPrincipal([NotNull] SqlBaseParser.SpecifiedPrincipalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>userPrincipal</c>
	/// labeled alternative in <see cref="SqlBaseParser.principal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserPrincipal([NotNull] SqlBaseParser.UserPrincipalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>rolePrincipal</c>
	/// labeled alternative in <see cref="SqlBaseParser.principal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRolePrincipal([NotNull] SqlBaseParser.RolePrincipalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unspecifiedPrincipal</c>
	/// labeled alternative in <see cref="SqlBaseParser.principal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnspecifiedPrincipal([NotNull] SqlBaseParser.UnspecifiedPrincipalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.roles"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoles([NotNull] SqlBaseParser.RolesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unquotedIdentifier</c>
	/// labeled alternative in <see cref="SqlBaseParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnquotedIdentifier([NotNull] SqlBaseParser.UnquotedIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quotedIdentifier</c>
	/// labeled alternative in <see cref="SqlBaseParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuotedIdentifier([NotNull] SqlBaseParser.QuotedIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>backQuotedIdentifier</c>
	/// labeled alternative in <see cref="SqlBaseParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBackQuotedIdentifier([NotNull] SqlBaseParser.BackQuotedIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>digitIdentifier</c>
	/// labeled alternative in <see cref="SqlBaseParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDigitIdentifier([NotNull] SqlBaseParser.DigitIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>decimalLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalLiteral([NotNull] SqlBaseParser.DecimalLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>doubleLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleLiteral([NotNull] SqlBaseParser.DoubleLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>integerLiteral</c>
	/// labeled alternative in <see cref="SqlBaseParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerLiteral([NotNull] SqlBaseParser.IntegerLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SqlBaseParser.nonReserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNonReserved([NotNull] SqlBaseParser.NonReservedContext context);
}
